{"version":3,"file":"otherBundles/typingTechniquePage.js","mappings":"mBAUEA,SAASC,iBAAiB,oBAAoB,WCRhD,IACQC,IAAYF,SAASG,cAAc,gBACzCH,SACGG,cAAc,4BACdF,iBAAiB,SAAS,WACgC,SAArDG,OAAOC,iBAAiBH,EAAW,MAAMI,SAC3CJ,EAAUK,UAAUC,OAAO,iBAC3BN,EAAUK,UAAUE,IAAI,oBAExBP,EAAUK,UAAUC,OAAO,kBAC3BN,EAAUK,UAAUE,IAAI,iBAE5B,IAEFL,OAAOH,iBAAiB,UAAU,WAC5BG,OAAOM,WAFG,MAGZR,EAAUK,UAAUC,OAAO,kBAC3BN,EAAUK,UAAUC,OAAO,iBAE/B,IA6CF,WACE,GAAIG,aAAaC,QAAQ,eAAgB,CACvC,IAAMC,EAAoBb,SAASG,cAAc,uBACjDU,EAAkBC,KAAO,uBACzBD,EAAkBV,cAAc,KAAKY,YAAc,gBACnD,IAAMC,EAAUH,EAAkBV,cAAc,OAChDa,EAAQC,IAAM,oCACdD,EAAQE,IAAM,eAChB,CACF,CD/DIC,EACF,G","sources":["webpack://typing-trainer/./assets/scripts/typing-technique/typing-technique-controller.js","webpack://typing-trainer/./assets/scripts/tools/tools.js"],"sourcesContent":["\"use strict\";\r\n\r\nimport {\r\n  toggleBurgerMenu,\r\n  checkAuthorizationAtLocalStorage,\r\n} from \"../tools/tools.js\";\r\n\r\n// Controller of page \"Typing technique\"\r\n\r\nfunction initTypingTechnique() {\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    toggleBurgerMenu();\r\n    checkAuthorizationAtLocalStorage();\r\n  });\r\n}\r\n\r\nexport default initTypingTechnique;\r\n","\"use strict\";\r\n\r\nfunction toggleBurgerMenu() {\r\n  const headerNav = document.querySelector(\".header__nav\");\r\n  document\r\n    .querySelector(\".header__burger-menu-btn\")\r\n    .addEventListener(\"click\", () => {\r\n      if (window.getComputedStyle(headerNav, null).display === \"flex\") {\r\n        headerNav.classList.remove(\"appeared-flex\");\r\n        headerNav.classList.add(\"hidden-element\");\r\n      } else {\r\n        headerNav.classList.remove(\"hidden-element\");\r\n        headerNav.classList.add(\"appeared-flex\");\r\n      }\r\n    });\r\n  const tabletL = 768;\r\n  window.addEventListener(\"resize\", () => {\r\n    if (window.outerWidth > tabletL) {\r\n      headerNav.classList.remove(\"hidden-element\");\r\n      headerNav.classList.remove(\"appeared-flex\");\r\n    }\r\n  });\r\n}\r\n\r\nfunction addCloseListenersToModalWindow(modalWindowWrapper, isError) {\r\n  const modalWindowCloseBtn = document.querySelector(\r\n    `.${isError ? \"error-\" : \"\"}modal-window-wrapper__close-btn`\r\n  );\r\n  modalWindowCloseBtn.addEventListener(\"click\", () => {\r\n    modalWindowWrapper.remove();\r\n  });\r\n  modalWindowWrapper.addEventListener(\"click\", (event) => {\r\n    if (event.target === modalWindowWrapper) {\r\n      modalWindowWrapper.remove();\r\n    }\r\n  });\r\n}\r\n\r\nfunction openModalWindowWithErrorMessage(errorMsg) {\r\n  const modalWindowWrapper = document.createElement(\"div\");\r\n  modalWindowWrapper.classList.add(\"modal-window-wrapper\");\r\n  modalWindowWrapper.innerHTML = `\r\n    <div class=\"error-modal-window-wrapper__window\">\r\n        <button class=\"error-modal-window-wrapper__close-btn\"></button>\r\n        <h3 class=\"modal-window-wrapper__headline\">Error</h3>\r\n        <p class=\"modal-window-wrapper__error-info\">${errorMsg}</p>\r\n        <button class=\"error-modal-window-wrapper__btn-ok\">OK</button>\r\n    </div>\r\n    `;\r\n  document.body.append(modalWindowWrapper);\r\n  document\r\n    .querySelector(\".error-modal-window-wrapper__btn-ok\")\r\n    .addEventListener(\"click\", () => {\r\n      modalWindowWrapper.remove();\r\n    });\r\n  addCloseListenersToModalWindow(modalWindowWrapper, true);\r\n}\r\n\r\nfunction putAuthorizationToLocalStorage(nickname) {\r\n  localStorage.setItem(\"currentUser\", nickname);\r\n}\r\n\r\nfunction removeAuthorizationFromLocalStorage() {\r\n  localStorage.removeItem(\"currentUser\");\r\n}\r\n\r\nfunction checkAuthorizationAtLocalStorage() {\r\n  if (localStorage.getItem(\"currentUser\")) {\r\n    const authorizationLink = document.querySelector(\"#authorization-link\");\r\n    authorizationLink.href = \"./personal-area.html\";\r\n    authorizationLink.querySelector(\"p\").textContent = \"Personal area\";\r\n    const iconImg = authorizationLink.querySelector(\"img\");\r\n    iconImg.src = \"./assets/images/personal-area.png\";\r\n    iconImg.alt = \"Personal area\";\r\n  }\r\n}\r\n\r\nexport {\r\n  toggleBurgerMenu,\r\n  addCloseListenersToModalWindow,\r\n  openModalWindowWithErrorMessage,\r\n  putAuthorizationToLocalStorage,\r\n  removeAuthorizationFromLocalStorage,\r\n  checkAuthorizationAtLocalStorage,\r\n};\r\n"],"names":["document","addEventListener","headerNav","querySelector","window","getComputedStyle","display","classList","remove","add","outerWidth","localStorage","getItem","authorizationLink","href","textContent","iconImg","src","alt","checkAuthorizationAtLocalStorage"],"sourceRoot":""}